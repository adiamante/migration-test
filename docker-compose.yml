services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password@123
    volumes:
    #https://mkyong.com/docker/how-to-run-an-init-script-for-docker-postgres/
      - ./postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    #https://stackoverflow.com/questions/35069027/docker-wait-for-postgresql-to-be-running
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
      environment:
         - FLYWAY_USER=postgres
         #- FLYWAY_USER=postgresekwrje  #test fail migration
         - FLYWAY_PASSWORD=Password@123
         - FLYWAY_URL=jdbc:postgresql://postgres:5432/testdb
         #- FLYWAY_SCHEMAS=dbo
         - FLYWAY_GROUP=true
         - FLYWAY_VALIDATE_MIGRATION_NAMING=true
      image: flyway/flyway:latest
      volumes:
         - ./migration:/flyway/sql
      depends_on:
          postgres:
            condition: service_healthy
      command: -locations=filesystem:/flyway/sql migrate

  pgtap:
    build:
      context: .
      dockerfile: Dockerfile.pgtap
    depends_on:
          postgres:
            condition: service_healthy
          flyway:
            condition: service_completed_successfully
    volumes:
      - ./tests:/tests
    environment:
      PGTAP_DB: testdb
      PGTAP_USER: postgres
      PGTAP_PASSWORD: Password@123
      #PG_SCHEMA: dbo
    entrypoint: ["/usr/local/bin/entrypoint.sh"]

  flyway-deploy:
      environment:
         - FLYWAY_USER=postgres
         - FLYWAY_PASSWORD=Password@123
         - FLYWAY_URL=jdbc:postgresql://postgres:5432/testdb
         #- FLYWAY_SCHEMAS=dbo
         - FLYWAY_GROUP=true
         - FLYWAY_VALIDATE_MIGRATION_NAMING=true
      image: flyway/flyway:latest
      volumes:
         - ./migration:/flyway/sql
      depends_on:
          postgres:
            condition: service_healthy
          flyway:
            condition: service_completed_successfully
          pgtap:
            condition: service_completed_successfully
      command: -locations=filesystem:/flyway/sql migrate
